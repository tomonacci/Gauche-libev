Source: https://github.com/apache/httpd/blob/trunk/support/ab.c
Older bug report: http://archive.apache.org/gnats/6128
Follow up discussion: http://mail-archives.apache.org/mod_mbox/httpd-dev/200102.mbox/%3C01a901c09e07$419a12f0$93c0b0d0@roweclan.net%3E
Observation: http://d.hatena.ne.jp/t_yamo/20100115/1263537524

write_request:
  returns unless started < requests
  started++ at the end

start_connect:
  returns unless started < requests
  connect might return EINPROGRESS, in which case the function returns early

Suppose requests == 3.
started == 0
start_connect → 0 < 3 → EINPROGRESS
start_connect → 0 < 3 → EINPROGRESS
start_connect → 0 < 3 → EINPROGRESS
start_connect → 0 < 3 → EINPROGRESS
start_connect → 0 < 3 → EINPROGRESS
started == 0
enter poll cycle → all sockets become writable
write_request → 0 < 3 → started++;
write_request → 1 < 3 → started++;
write_request → 2 < 3 → started++;
write_request → 3 < 3 → return; ← extra connection (1)
write_request → 3 < 3 → return; ← extra connection (2)

1822:do {
1823:  status = apr_pollset_poll(...);
1824:} while (APR_STATUS_IS_EINTR(status));
...
1862:if ((rtnev & APR_POLLERR) || (rtnev & APR_POLLNVAL)) {
1863:  if (destsa->next && c->state == STATE_CONNECTING && good == 0) {
1864:    destsa = desta->next;
1865:    start_connect(c);
1866:  }
